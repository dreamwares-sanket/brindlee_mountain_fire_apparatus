<apex:page extensions="AmazonS3ImageUploaderPageExtention" showHeader="false" standardController="Product2" standardStylesheets="false" sidebar="false" applyBodyTag="false" docType="html-5.0">
    <apex:remoteObjects >
        <apex:remoteObjectModel id="cloudDocRemoteId" name="DragDropToCloud__Cloud_Documents__c" jsShorthand="getCloudDocs" fields="id,Name,Product__c,Show_Online__c,Main_Image__c,Main_Thumbnail__c,DragDropToCloud__Bucket_Name__c,DragDropToCloud__Folder_Id__c"/>
    </apex:remoteObjects>
    <head>
        <meta charset="utf-8"/>
    
        <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800,400italic,600italic' rel='stylesheet' type='text/css'/>
        <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1"/>
        <!-- Link Swiper's CSS -->
        <link rel="stylesheet" href="{!URLFOR($Resource.ImageSwiper,'swiper.min.css')}"/>
        
        <style>
            *{font-family: 'Open Sans', sans-serif; box-sizing: border-box;}
            html, body { position: relative; height: 100%;}
            body { background: #fff; font-size: 14px; color:#000;  margin: 0;  padding: 15px;}
            .container{max-width:980px; margin:0 auto;position:relative;  background: #000; box-sizing: border-box;}
            .swiper-container { width: 100%; height: 300px; margin-left: auto; margin-right: auto; }
            .gallery-top .swiper-slide { background-size: contain;  background-position: center; background-repeat:no-repeat; margin-top: 10px;}
            .gallery-thumbs .swiper-slide { background-size: cover;  background-position: center; background-repeat:no-repeat;}
            .gallery-top { width: 100%; margin-top: 0px;} 
            .gallery-thumbs { height: 100px;  box-sizing: border-box; padding: 10px 0; border-top: 1px solid black; border-bottom: 1px solid #fff; background: #000; margin-top: 10px;}
            .gallery-thumbs .swiper-slide { width: 100px; height: 100%; opacity: 0.4; cursor: pointer; }
            .gallery-thumbs .swiper-slide-active {  opacity: 1; }
            .swiper-button-next, .swiper-button-prev{background-size: 20px;}
            .btn.submit{ background: #0087FF; border: 0 none; padding: 8px 20px;font-weight: bold; color: #fff; font-size: 15px; cursor: pointer;}
            .background-block{ position: fixed; width: 100%; height: 100%; top: 0; left: 0; background-color: rgba(0, 0, 0, 0.66); z-index: 999;}
            #wait{ padding: 10px 15px; width: 150px; margin: 0 auto; border-radius: 4px; z-index: 9999; text-align: center; position: absolute; top: 45%; left: 45%; }
            .ProgressBar { border: 1px solid; height: 10px; margin-top: 10px; border-radius: inherit; }
            .progressFill { height: 8px; background-color: white; border-radius: inherit; width: 0%; }
            input.add-btn {background:transparent url('{!URLFOR($Resource.ImageSwiper,'1463500971_More.svg')}') no-repeat center;  top: 10px; height: 80px;width: 80px;  margin-top: 0px; background-size: 54px; border: 1px solid #FFF;  z-index: 3;  cursor: pointer;  border-radius: 8px}
            .btns-div{text-align:center;    box-sizing: border-box;  padding: 20px;}
            input:focus{ outline:0;}
            .page-title{display:block; text-align:center;}
            .deleteBtn:hover { transform:scale(1.1); transition:all 0.03s ease-in-out; }
            .deleteBtn{width: 17px; height: 17px; background: rgba(0, 0, 0, 0.49); position: absolute; top: 0; right: 0;border-radius: 100%;  padding: 2px;}
            .preview {  display:none; position: absolute; top: 0;  right: 0;  width: 100%; height: 100%; background: rgba(58, 56, 56, 0.65); z-index: 9; text-align:center; }
            .preview input { background: black; border: 0 none; width: 200px; padding: 15px; color: #fff; box-shadow: 0 0 13px 1px white; margin-top: 136px; cursor: pointer; }
            .swiper-container.gallery-top .swiper-slide:hover .preview{display:block !important;}
            /*.gallery-top .swiper-slide(position:relative !important;)
            .gallery-top .swiper-slide:hover .preview{display:block;}
            .swiper-container.gallery-top .swiper-slide:hover .preview{display:block;}*/
            img.main_selct { text-align: center; margin: 25px auto; display: none; width: 25px; height: 25px;}
            
            
        </style>
        <title>Brindlee</title>
        <!-- Included Design CSS And Scripts -->
        <apex:includeScript value="{!URLFOR($Resource.ImageSwiper,'jQueryV1.11.1.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.ImageSwiper,'aws-sdk-2.1.24.js')}"></apex:includeScript>
        <apex:includeScript value="{!URLFOR($Resource.ImageSwiper,'swiper.min.js')}"></apex:includeScript>
        <!-- / Included Design CSS And Scripts -->        
    </head>
    <body>
    
        <h1 class="page-title">AMAZON S3 - IMAGE UPLOAD</h1>
        <div class="container">
            
            <div class="background-block" style="display: none;">
                <div id="wait" style="color:white;">
                    <img src="{!URLFOR($Resource.ImageSwiper, 'spinner.gif')}" width="64" height="64" />
                    <br/><b>Loading..</b>
                    <div class="ProgressBar" style="display: none;"><div class="progressFill"/></div>
                </div>
            </div>
            <div class="">
                <div class="swiper-container gallery-thumbs">
                    <div class="swiper-wrapper imageSelector"/>
                </div>
                <input type="button" class="add-btn" value="" onclick="$j('#fileInId').trigger('click');" style="position:absolute; right:10px;">
                    <!--<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 48 48" height="48px" id="Layer_1" version="1.1" viewBox="0 0 48 48" width="48px" xml:space="preserve"><g><path d="M24,0C10.745,0,0,10.746,0,24c0,13.255,10.745,24,24,24s24-10.744,24-24C48,10.746,37.255,0,24,0z    M24.029,43.844c-11.023,0-19.959-8.936-19.959-19.958S13.006,3.926,24.029,3.926c11.022,0,19.959,8.936,19.959,19.959   S35.052,43.844,24.029,43.844z" fill="#231F20" style="&#10;    fill: red;&#10;"/><path d="M32.56,21.902h-6.458l0.008-6.576c-0.026-0.454-0.221-1.354-1.331-1.356L23.2,13.968   c-1.181-0.001-1.282,1.165-1.288,1.47l-0.008,6.463h-6.607c-1.22,0-1.323,0.941-1.328,1.21v1.809   c0.006,0.247,0.107,1.178,1.328,1.178h6.602l-0.008,6.602c-0.002,1.219,0.939,1.324,1.209,1.33l1.809,0.002   c0.247-0.006,1.178-0.107,1.18-1.326l0.008-6.607h6.581c0.454-0.027,1.354-0.223,1.354-1.333v-1.578   C34.031,22.007,32.865,21.908,32.56,21.902z" fill="#231F20"/></g></svg>-->
                </input>
            </div>
           
            <div class="swiper-container gallery-top" >
                 <div class="preview">
                     <input type="button" name="" value="Select As Main Image" onclick="$j('.main_selct').hide(); $j('.imageSelector .swiper-slide-active :first-child').css('display', 'block');"/>
                </div>  
                <div class="swiper-wrapper" />
                
                <!-- Add Arrows -->
                <div class="swiper-button-next swiper-button-white"></div>
                <div class="swiper-button-prev swiper-button-white"></div>
            </div>       
            
            <div id="operationalDiv" style="display: none;">
                <canvas id="smallImg" width="100px"/>
                <canvas id="mainMediumImg" width="208px"/>
                <canvas id="mainLargeImg" width="597px"/>
            </div>
            
            <input id="fileInId" type="file" accept="Image/*" style="display: none;" multiple="multiple"/>
            
            <div class="btns-div">        
                <input type="button" id="submitBtn" class="btn submit" value="Submit" onclick="$j('.background-block').show(); submitData();"/>
                <input type="button" id="backBtn" class="btn submit" value="Back" style="margin-left: 5px;" onclick="window.open('/{!Product2.Id}','_top');"/>                
            </div>
        </div>
        
        <script>
            var $j = jQuery.noConflict();
            
            window.fileCount = 0;
            window.OriginalfileCount = 0;
            
            var AWSCredentials = JSON.parse('{!JSENCODE(LoginCredentials)}');
            
            AWS.config.update({
                accessKeyId : AWSCredentials.AccessKeyId__c,
                secretAccessKey : AWSCredentials.SecretAccessKey__c,
                region_config: "us-west-2" 
            });
                     
            var imageDetails = [];
            
            function submitData() {
                if(imageDetails.length > 0) {
                    $j('.ProgressBar').prev().html('Uploading..').next().show();
                    if($j('.main_selct:visible').length) {
                        var img = $j('.main_selct:visible').parent().css('background-image');
                        img = (img.replace('url(','').replace(')','')).replace(/['"']/g,'');
                        
                        var mainImgIndex = 0;
                        $j('.imageSelector').children().each(function() {
                            if($j(this).find(':first-child').is(':visible')) {
                                return false;
                            }
                            mainImgIndex++;
                        });
                        //console.log(imageDetails[mainImgIndex*2][0]);
                        window.mainFileName = imageDetails[mainImgIndex*2][0];
                        getCanvasImageDataURL(img, 208, $j('#mainMediumImg'), 'medium_' + window.mainFileName, 'main_medium', imageDetails.length);
                        getCanvasImageDataURL(img, 597, $j('#mainLargeImg'), 'large_' + window.mainFileName, 'main_large', imageDetails.length);
                    } else {
                        //console.log('cought');
                        AWSS3imageUploader();
                    }
                } else {
                    alert('Please select an Image!');
                    $j('.background-block').fadeOut(200);
                }
            }
            
            function AWSS3imageUploader() {
                
                var bucket = new AWS.S3({params: {Bucket: AWSCredentials.BucketId__c}});
                var options = { partSize: 10 * 1024 * 1024, queueSize: imageDetails.length };
                imageDetails.forEach(function(file) {
                    //console.log(file[0]);
                    var params = {Key: '01t-product2/{!Product2.Id}/'+file[0], ContentType: file[1], Body: file[2]};
                    console.log(file[0]);
                    bucket.upload(params, options).on('httpUploadProgress', function(evt) {
                        //console.log("Uploaded :: " + parseInt((evt.loaded * 100) / evt.total)+'%');
                        if(parseInt((evt.loaded * 100) / evt.total) === 100) {
                            $j('.progressFill').css('width',((100*(window.fileCount))/(imageDetails.length-1))+'%');
                        }
                        //var per=parseInt((evt.loaded * 100) / evt.total)+'%';
                        //document.getElementById("Upload1").style.width = per ;                  
                    }).send(function(err, data) {                      
                        if(!err) {
                            if(window.fileCount === (imageDetails.length-1)) {
                                console.log("File uploaded Successfully");
                                $j('.ProgressBar').hide(200).prev().hide(200).html('Creating Records..').show(200).next().find('.progressFill').css('width','0%').parent().show(200);
                                createCloudDocs();
                            }
                            window.fileCount++;
                        } else {
                            console.log(err);
                        }
                    });
                });
            }
            
            function getCanvasImageDataURL(img, maxWidth, canvasElement, FName, imageType, pushIndex) {
                var tempImg = new Image();
                var image = new Image();
                var width = 0;
                var height = 0;
                var ratio = 0;
                tempImg.onload = function() {       
                    width = tempImg.width;                       // Current image width
                    height = tempImg.height;                     // Current image height
                    ratio = maxWidth / width;
                    //console.log(width+':'+height+':'+ratio);
                    $j(canvasElement).attr("height", height * ratio);
                    
                    var canvas = $j(canvasElement)[0];
                    var context = canvas.getContext('2d');
                    
                    image.onload = function() {
                        context.drawImage(image, 0, 0, maxWidth, (height * ratio));                    
                        imageDetails[pushIndex] = [FName, 'image/png', dataURItoBlob(canvas.toDataURL()), imageType];
                        if((pushIndex+1) === ((window.OriginalfileCount*2)+2)) {
                            console.log('call AWS');
                            AWSS3imageUploader();
                        }
                    };      
                    image.src = tempImg.src;        
                };
                tempImg.src = img;
                imageDetails.push([]);
            }
                        
            function createCloudDocs() {
                var cloudDoc = new SObjectModel.getCloudDocs();                
                window.cloudDocCount = 0;
                for(var index = 0; index < window.OriginalfileCount*2; index+=2) {
                    var cloudDocRecord = {};
                    cloudDocRecord['Name'] = imageDetails[index][0];
                    cloudDocRecord['DragDropToCloud__Bucket_Name__c'] = AWSCredentials.BucketId__c;
                    cloudDocRecord['DragDropToCloud__Folder_Id__c'] = '01t-product2/{!Product2.Id}/'+imageDetails[index][0];
                    cloudDocRecord['Product__c'] = '{!Product2.Id}';
                    
                    if(window.mainFileName === imageDetails[index][0]) {
                        cloudDocRecord['Main_Image__c'] = true;
                        cloudDocRecord['Main_Thumbnail__c'] = true;
                        cloudDocRecord['Show_Online__c'] = true;
                    } else {
                        cloudDocRecord['Show_Online__c'] = true;
                    }
                    
                    cloudDoc.create(
                        cloudDocRecord
                        ,function(err, cloudDocRresult) {
                            if(err) {
                                alert('Something Goes Worng.. Please Contact Admin!');
                                console.log(err);
                            } else {
                                window.cloudDocCount++;
                                $j('.progressFill').css('width',((100*(window.cloudDocCount))/(window.OriginalfileCount))+'%'); 
                                if(window.cloudDocCount === window.OriginalfileCount)
                                    window.open('/{!Product2.Id}','_top');
                            }
                        }
                    );
                }
            }
            
            function prepareSwiper() {
                $j('.swiper-container.gallery-top .swiper-slide').mouseenter(function() {
                    $j('.preview').show();
                });
                $j('.preview').mouseleave(function() {
                    $j('.preview').hide();
                });
                
                window.galleryTop = new Swiper('.gallery-top', {
                    nextButton: '.swiper-button-next',
                    prevButton: '.swiper-button-prev',
                    spaceBetween: 10,
                });
                window.galleryThumbs = new Swiper('.gallery-thumbs', {
                    spaceBetween: 10,
                    centeredSlides: true,
                    slidesPerView: 'auto',
                    touchRatio: 0.2,
                    slideToClickedSlide: true
                });
                galleryTop.params.control = galleryThumbs;
                galleryThumbs.params.control = galleryTop;
                
                $j('.swiper-slide-active').trigger('click');
            }
            
            $j('#fileInId').change(function(e) {
                fr = new FileReader();
                function readFile(index) {
                    if( index >= e.target.files.length ) {
                        $j('.background-block').fadeOut(200);
                        return;
                    }
        
                    var file = e.target.files[index];
                    fr.onload = function(e) {  
                        // get file content  
                        var img = e.target.result;
                        var fileName = file.name;
                        var fileType = file.type;
                        var isFind = false;
                        imageDetails.forEach(function(image) {
                            if(fileName == image[0]) {
                                isFind = true;
                                return;
                            }
                        });
                        if(!isFind) {
                            
                            $j('.imageSelector').append('<div class="swiper-slide" style="background-image:url('+ img +')" align="right"><img class="main_selct" onclick="$j(this).hide();" src="{!URLFOR($Resource.ImageSwiper, '1463767527_tick_green.png')}" height="20px" width="20px"/><img class="deleteBtn" onclick="removeImage(this,'+window.OriginalfileCount+')" src="{!URLFOR($Resource.ImageSwiper, '1463664535_Close.png')}" height="20px" width="20px"/></div>')
                            $j('.gallery-top .swiper-wrapper').append('<div id="slide_'+window.OriginalfileCount+'" class="swiper-slide swiper-display" style="background-image:url('+ img +')"/>')
                        
                            // Original Image for upload
                            imageDetails.push([fileName, fileType, file, 'slide_'+window.OriginalfileCount]);
                            
                            getCanvasImageDataURL(img, 100, $j('#smallImg'), 'small_'+fileName, 'small', imageDetails.length);                            
                            window.OriginalfileCount++;
                        }
                        prepareSwiper();
                        readFile(index+1)
                    }
                    fr.readAsDataURL(file);
                }
                $j('.background-block').show();
                readFile(0);
            });
            
            function removeImage(ImgElement, Id) {
                $j('.background-block').show();
                $j('#slide_'+Id).remove();
                $j(ImgElement).parent().remove();
                
                galleryTop.slideTo(0, 200);
                
                for(var index=0; index<imageDetails.length; index+=2) {
                    if(imageDetails[index][3] === 'slide_'+Id){
                        imageDetails.splice(index, 2);
                        window.OriginalfileCount--;
                    }
                }
                
                //console.log(window.OriginalfileCount);
                prepareSwiper();
                $j('.background-block').fadeOut(200);
            }
            
            function dataURItoBlob(dataURI) {
                // convert base64/URLEncoded data component to raw binary data held in a string
                var byteString;
                if (dataURI.split(',')[0].indexOf('base64') >= 0)
                    byteString = atob(dataURI.split(',')[1]);
                else
                    byteString = unescape(dataURI.split(',')[1]);
            
                // separate out the mime component
                var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
            
                // write the bytes of the string to a typed array
                var ia = new Uint8Array(byteString.length);
                for (var i = 0; i < byteString.length; i++) {
                    ia[i] = byteString.charCodeAt(i);
                }            
                return new Blob([ia], {type:mimeString});
            }
        </script>
    </body>
</apex:page>